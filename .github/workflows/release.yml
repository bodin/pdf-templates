name: Build and Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Clone Source (Full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: install conventional-changelog-cli
        run: npm install -g conventional-changelog-cli

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Conventional Changelog Action
        # this lib will print 'changes for the uncommited version' - so we need to
        # include 2 releases, and clean up the junk
        #
        # sed 1d (remove first line)
        # sed '/./,$!d' (remove blank lines)
        run:  conventional-changelog -p eslint -r 2 | sed 1d | sed '/./,$!d' | sed 1d > CHANGELOG.md ; cat CHANGELOG.md

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          body_path: CHANGELOG.md
          draft: true
          prerelease: false

      - name: Set env
        run: echo "RELEASE_VERSION=$(echo ${{ github.ref_name }} | cut -c 2-)" >> $GITHUB_ENV

      - name: Build and Publish Release
        env: # Or as an environment variable
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_PASSWORD }}
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}
          ORG_GRADLE_PROJECT_version: ${{ env.RELEASE_VERSION }}

        run: >-
          ./gradlew publish